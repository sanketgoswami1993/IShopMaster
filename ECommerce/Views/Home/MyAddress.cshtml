@model ECommerce.Models.DelivaryAddresses

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var addressList = ViewBag.AddressList as List<ECommerce.Models.DelivaryAddresses>;

    var lastAddress = (ViewBag.AddressList as List<DelivaryAddresses>)?.LastOrDefault();
    var firstLetter = lastAddress?.FullName?.FirstOrDefault() ?? ' ';
    var fullName = lastAddress?.FullName;

    var formattedName = !string.IsNullOrEmpty(fullName)
        ? char.ToUpper(fullName[0]) + fullName.Substring(1).ToLower()
        : "";
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<!-- page-title -->
<div class="page-title" style="background-image: url('@Url.Content("~/content/images/section/page-title.jpg")');">
    <div class="container-full">
        <div class="row">
            <div class="col-12">
                <h3 class="heading text-center">My Account</h3>
            </div>
        </div>
    </div>
</div>
<!-- /page-title -->

<section class="flat-spacing">
    <div class="container">
        <div class="my-account-wrap">
            <div class="wrap-sidebar-account">
                <div class="sidebar-account">
                    <div class="account-avatar">
                        <div class="d-flex justify-content-center align-items-center rounded-circle bg-secondary text-white fw-bold" style="width: 80px; height: 80px;">
                            <h3 class="text-white">@char.ToUpper(firstLetter)</h3>
                        </div>

                        <br />
                        <h6 class="mb_4">
                            @formattedName
                        </h6>
                        @* <div class="body-text-1">themesflat@gmail.com</div> *@
                    </div>
                    <ul class="my-account-nav">
                        <li>

                                <a href="@Url.Action("MyAccount", "Home")" class="my-account-nav-item">
                                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M20 21V19C20 17.9391 19.5786 16.9217 18.8284 16.1716C18.0783 15.4214 17.0609 15 16 15H8C6.93913 15 5.92172 15.4214 5.17157 16.1716C4.42143 16.9217 4 17.9391 4 19V21" stroke="#181818" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                        <path d="M12 11C14.2091 11 16 9.20914 16 7C16 4.79086 14.2091 3 12 3C9.79086 3 8 4.79086 8 7C8 9.20914 9.79086 11 12 11Z" stroke="#181818" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                    </svg>
                                    Account Details
                                </a>
                        </li>
                        <li>
                            <a href="@Url.Action("Orders", "Home")" class="my-account-nav-item">
                                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M16.5078 10.8734V6.36686C16.5078 5.17166 16.033 4.02541 15.1879 3.18028C14.3428 2.33514 13.1965 1.86035 12.0013 1.86035C10.8061 1.86035 9.65985 2.33514 8.81472 3.18028C7.96958 4.02541 7.49479 5.17166 7.49479 6.36686V10.8734M4.11491 8.62012H19.8877L21.0143 22.1396H2.98828L4.11491 8.62012Z" stroke="#181818" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                </svg>
                                Your Orders
                            </a>
                        </li>
                        <li>
                           <span class="my-account-nav-item active">
                                <a href="@Url.Action("MyAddress", "Home")" class="my-account-nav-item">
                                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M21 10C21 17 12 23 12 23C12 23 3 17 3 10C3 7.61305 3.94821 5.32387 5.63604 3.63604C7.32387 1.94821 9.61305 1 12 1C14.3869 1 16.6761 1.94821 18.364 3.63604C20.0518 5.32387 21 7.61305 21 10Z" stroke="#181818" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                        <path d="M12 13C13.6569 13 15 11.6569 15 10C15 8.34315 13.6569 7 12 7C10.3431 7 9 8.34315 9 10C9 11.6569 10.3431 13 12 13Z" stroke="#181818" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                    </svg>
                                    My Address
                                </a>
                           </span>
                        </li>
                        <li>
                            <a href="@Url.Action("Logout", "Account")" class="my-account-nav-item">
                                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M9 21H5C4.46957 21 3.96086 20.7893 3.58579 20.4142C3.21071 20.0391 3 19.5304 3 19V5C3 4.46957 3.21071 3.96086 3.58579 3.58579C3.96086 3.21071 4.46957 3 5 3H9" stroke="#181818" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                    <path d="M16 17L21 12L16 7" stroke="#181818" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                    <path d="M21 12H9" stroke="#181818" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                </svg>
                                Logout
                            </a>
                        </li>
                    </ul>
                </div>
            </div>

            <div class="my-account-content">
                <div class="account-address">
                    <div class="text-center widget-inner-address">
                        <button class="tf-btn btn-fill radius-4 mb_20 btn-address">
                            <span class="text text-caption-1">Add a new address</span>
                        </button>
                    </div>
                </div>

                <div class="list-account-address">
                    @if (addressList != null)
                    {
                        @foreach (var item in addressList.OrderByDescending(a => a.AddressId))
                        {
                          <div class="account-address-item">
                                                <h6 class="mb_20">Default</h6>
                                                <p>@item.FullName</p>
                                                <p>@item.Address</p>
                                                <p>@item.City, @item.State</p>
                                                <p>@item.Country - @item.ZipCode</p>
                                                <p class="mb_10">(@item.Mobile)</p>
                                                <input type="hidden" name="addressId" value="@item.AddressId" />
                                                <div class="d-flex gap-10 justify-content-left">
                                                    <button class="tf-btn radius-4 btn-fill justify-content-center btn-edit-address"
                                                            data-id="@item.AddressId"
                                                            data-fullname="@item.FullName"
                                                            data-mobile="@item.Mobile"
                                                            data-country="@item.Country"
                                                            data-state="@item.State"
                                                            data-city="@item.City"
                                                            data-zipcode="@item.ZipCode"
                                                            data-address="@item.Address">
                                                        <span class="text">Edit</span>
                                                    </button>
                                                    <form asp-action="DeleteAddress" asp-controller="Home" method="post" id="deleteForm-@item.IShopId">
                                                        <input type="hidden" name="addressId" value="@item.AddressId" />
                                                        <button type="button"
                                                                onclick="this.form.submit()"
                                                                class="tf-btn radius-4 btn-outline justify-content-center btn-delete-address">
                                                            <span class="text">Delete</span>
                                                        </button>
                                                    </form>
                                                </div>
                                            </div>
                        }
                    }
                </div>

                <div id="addressFormContainer" style="display: none;">
                    <div class="card p-3">
                        <form id="addressForm" asp-action="MyAddress" method="post" class="form-account-details form-has-password mt-2">
                            <div class="account-info">
                                <input type="hidden" id="addressId" name="addressId" value="@Model?.AddressId" />
                                <input type="hidden" id="formMode" name="formMode" value="Add Address" />
                                <div class="title text-center fs-3 fw-bold">Add New address</div>
                                <fieldset class="mt-3">
                                    <input class="" id="fullName" asp-for="FullName" placeholder="Fullname*" name="fullName" tabindex="2" value="@Model?.FullName" aria-required="true" required="">
                                    <span id="fullNameError" class="text-danger"></span>
                                </fieldset>
                                <fieldset class="mt-3">
                                    <input class="" id="mobile" asp-for="Mobile" type="tel" placeholder="Mobile number*" name="mobile" pattern="[0-9]{10}" maxlength="10" tabindex="2" value="@Model?.Mobile" aria-required="true" required="">
                                    <span id="mobileError" class="text-danger"></span>
                                </fieldset>
                                <fieldset class="mt-3">
                                    <input class="" id="country" asp-for="Country" placeholder="Country*" name="country" tabindex="2" value="@Model?.Country" aria-required="true" required="">
                                    <span id="countryError" class="text-danger"></span>
                                </fieldset>
                                <fieldset class="mt-3">
                                    <input class="" id="state" asp-for="State" placeholder="state*" name="state" tabindex="2" value="@Model?.State" aria-required="true" required="">
                                    <span id="stateError" class="text-danger"></span>
                                </fieldset>
                                <fieldset class="mt-3">
                                    <input class="" id="city" asp-for="City" placeholder="City*" name="city" tabindex="2" value="@Model?.City" aria-required="true" required="">
                                    <span id="cityError" class="text-danger"></span>
                                </fieldset>
                                <fieldset class="mt-3">
                                    <input class="" id="zipCode" asp-for="ZipCode" placeholder="ZipCode*" name="zipCode" tabindex="2" value="@Model?.ZipCode" aria-required="true" required="">
                                    <span id="zipCodeError" class="text-danger"></span>
                                </fieldset>
                                <fieldset class="mt-3">
                                    <textarea class="" id="address" asp-for="Address" placeholder="Address*" name="address" tabindex="2" value="@Model?.Address" aria-required="true" required=""></textarea>
                                    <span id="addressError" class="text-danger"></span>
                                </fieldset>
                                <div class="cols-6 mb_20 d-flex gap-3 mt-3">
                                    <button class="tf-btn btn-fill" type="submit" id="submitBtn">
                                        <span class="text text-button">Add a new Address</span>
                                    </button>

                                    <button class="tf-btn btn-outline" type="button" id="cancelBtn">
                                        <span class="text text-button">Cancel</span>
                                    </button>
                                </div>
                            </div>
                            <br />
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        @if (TempData["Message"] != null)
        {
            <text>
                           showMessageModal("success", "@TempData["Message"]");
            </text>
        }

        document.querySelectorAll('.btn-edit-address').forEach(function (button) {
            button.addEventListener('click', function () {
                // Get data attributes
                const id = this.getAttribute('data-id');
                const fullName = this.getAttribute('data-fullname');
                const mobile = this.getAttribute('data-mobile');
                const country = this.getAttribute('data-country');
                const state = this.getAttribute('data-state');
                const city = this.getAttribute('data-city');
                const zipCode = this.getAttribute('data-zipcode');
                const address = this.getAttribute('data-address');

                // Fill the form
                document.getElementById('addressId').value = id;
                document.getElementById('fullName').value = fullName;
                document.getElementById('mobile').value = mobile;
                document.getElementById('country').value = country;
                document.getElementById('state').value = state;
                document.getElementById('city').value = city;
                document.getElementById('zipCode').value = zipCode;
                document.getElementById('address').value = address;
                document.getElementById('formMode').value = "Edit Address";
                document.querySelector('.title').innerText ="Edit Address";

                // Change button text
                document.querySelector("#addressFormContainer button[type=submit] .text-button").innerText = "Update Address";

                // Show form and hide list
                document.querySelector('.list-account-address').style.display = 'none';
                document.getElementById('addressFormContainer').style.display = 'block';
            });
        });

        document.getElementById('cancelBtn').addEventListener('click', function () {
            document.getElementById('addressForm').reset();
            document.getElementById('formMode').value = "Add Address";
            document.querySelector("#addressFormContainer button[type=submit] .text-button").innerText = "Add a new Address";
            document.getElementById('addressFormContainer').style.display = 'none';
            document.querySelector('.list-account-address').style.display = 'block';
        });

       document.querySelector('.btn-address').addEventListener('click', function () {
            // Reset form
            document.getElementById('addressForm').reset();

            // Clear hidden fields and mode
            document.getElementById('addressId').value = "";
            document.getElementById('formMode').value = "Add Address";
            document.querySelector('.title').innerText ="Add a new address";

            // Update button text
            document.querySelector("#addressFormContainer button[type=submit] .text-button").innerText = "Add a new Address";

            // Show the form, hide the list
            document.querySelector('.list-account-address').style.display = 'none';
            document.getElementById('addressFormContainer').style.display = 'block';
        });

    });
</script>

<script>
    $(document).ready(function () {
        // ADD NEW ADDRESS - open empty form
        $('.btn-address').click(function () {
            $('#addressForm')[0].reset(); // clear all fields
            $('#addressId').val('');
            $('#formMode').val('Add Address');
            $('#addressFormContainer').slideDown();
        });

        // EDIT BUTTON - open form with values
        $('.btn-edit-address').click(function () {
            const btn = $(this);
            $('#addressId').val(btn.data('id'));
            $('#fullName').val(btn.data('fullname'));
            $('#mobile').val(btn.data('mobile'));
            $('#country').val(btn.data('country'));
            $('#state').val(btn.data('state'));
            $('#city').val(btn.data('city'));
            $('#zipCode').val(btn.data('zipcode'));
            $('#address').val(btn.data('address'));

            $('#formMode').val('Edit Address');
            $('#addressFormContainer').slideDown();
        });

        // CANCEL BUTTON - hide form
        $('#cancelBtn').click(function () {
            $('#addressFormContainer').slideUp();
        });
    });

    function showMessageModal(type, message) {
        let modalTitle = document.getElementById("messageModalLabel");
        let modalBody = document.getElementById("messageText");
        let modalHeader = document.querySelector("#messageModal .modal-header");

        // Reset modal styles
        modalHeader.classList.remove("bg-success", "bg-danger", "text-white");

        if (type === "success") {
            modalTitle.innerText = "Success";
            modalBody.innerHTML = message;
            modalHeader.classList.add("bg-success", "text-white");
        } else if (type === "error") {
            modalTitle.innerText = "Error";
            modalBody.innerHTML = message;
            modalHeader.classList.add("bg-danger", "text-white");
        }

        // Show modal
        let messageModal = new bootstrap.Modal(document.getElementById("messageModal"));
        messageModal.show();
    }
</script>