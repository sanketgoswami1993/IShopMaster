@model ECommerce.Models.Register

@{
    if (Model?.Role == 1)
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_AdminLayout.cshtml";
    }
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<!-- page-title -->
<div class="page-title" style="background-image: url('@Url.Content("~/content/images/section/page-title.jpg")');">
    <div class="container-full">
        <div class="row">
            <div class="col-12">
                <h3 class="heading text-center">My Account</h3>
            </div>
        </div>
    </div>
</div>
<!-- /page-title -->

<section class="flat-spacing">
    <div class="container">
        <div class="my-account-wrap">
            <div class="wrap-sidebar-account">
                <div class="sidebar-account">
                    <div class="account-avatar">
                        <div class="d-flex justify-content-center align-items-center rounded-circle bg-secondary text-white fw-bold" style="width: 80px; height: 80px;">
                            <h3 class="text-white">@(char.ToUpper(Model?.FirstName?[0] ?? ' '))@(char.ToUpper(Model?.LastName?[0] ?? ' '))</h3>
                        </div>

                        <br />
                        <h6 class="mb_4">
                            @char.ToUpper(Model?.FirstName?[0] ?? ' ')@Model?.FirstName?.Substring(1).ToLower()
                            @char.ToUpper(Model?.LastName?[0] ?? ' ')@Model?.LastName?.Substring(1).ToLower()
                        </h6>
                    </div>
                    @if (Model?.Role == 1)
                    {
                       <ul class="my-account-nav">
                               <li>
                                   <span class="my-account-nav-item active">
                                       <a href="@Url.Action("MyAccount", "Home")" class="my-account-nav-item">
                                           <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                               <path d="M20 21V19C20 17.9391 19.5786 16.9217 18.8284 16.1716C18.0783 15.4214 17.0609 15 16 15H8C6.93913 15 5.92172 15.4214 5.17157 16.1716C4.42143 16.9217 4 17.9391 4 19V21" stroke="#181818" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                               <path d="M12 11C14.2091 11 16 9.20914 16 7C16 4.79086 14.2091 3 12 3C9.79086 3 8 4.79086 8 7C8 9.20914 9.79086 11 12 11Z" stroke="#181818" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                           </svg>
                                           Account Details
                                       </a>
                                   </span>
                               </li>
                               <li>
                                   <a href="@Url.Action("Orders", "Home")" class="my-account-nav-item">
                                       <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                           <path d="M16.5078 10.8734V6.36686C16.5078 5.17166 16.033 4.02541 15.1879 3.18028C14.3428 2.33514 13.1965 1.86035 12.0013 1.86035C10.8061 1.86035 9.65985 2.33514 8.81472 3.18028C7.96958 4.02541 7.49479 5.17166 7.49479 6.36686V10.8734M4.11491 8.62012H19.8877L21.0143 22.1396H2.98828L4.11491 8.62012Z" stroke="#181818" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                       </svg>
                                       Your Orders
                                   </a>
                               </li>
                               <li>
                                   <a href="@Url.Action("MyAddress", "Home")" class="my-account-nav-item">
                                       <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                           <path d="M21 10C21 17 12 23 12 23C12 23 3 17 3 10C3 7.61305 3.94821 5.32387 5.63604 3.63604C7.32387 1.94821 9.61305 1 12 1C14.3869 1 16.6761 1.94821 18.364 3.63604C20.0518 5.32387 21 7.61305 21 10Z" stroke="#181818" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                           <path d="M12 13C13.6569 13 15 11.6569 15 10C15 8.34315 13.6569 7 12 7C10.3431 7 9 8.34315 9 10C9 11.6569 10.3431 13 12 13Z" stroke="#181818" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                       </svg>
                                       My Address
                                   </a>
                               </li>
                               <li>
                                   <a href="@Url.Action("Logout", "Account")" class="my-account-nav-item">
                                       <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                           <path d="M9 21H5C4.46957 21 3.96086 20.7893 3.58579 20.4142C3.21071 20.0391 3 19.5304 3 19V5C3 4.46957 3.21071 3.96086 3.58579 3.58579C3.96086 3.21071 4.46957 3 5 3H9" stroke="#181818" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                           <path d="M16 17L21 12L16 7" stroke="#181818" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                           <path d="M21 12H9" stroke="#181818" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                       </svg>
                                       Logout
                                   </a>
                               </li>
                           </ul>
                    }
                    else
                    {
                       <ul class="my-account-nav">
                                                <li>
                                                    <span class="my-account-nav-item active">
                                                        <a href="@Url.Action("MyAccount", "Home")" class="my-account-nav-item">
                                                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                                <path d="M20 21V19C20 17.9391 19.5786 16.9217 18.8284 16.1716C18.0783 15.4214 17.0609 15 16 15H8C6.93913 15 5.92172 15.4214 5.17157 16.1716C4.42143 16.9217 4 17.9391 4 19V21" stroke="#181818" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                                                <path d="M12 11C14.2091 11 16 9.20914 16 7C16 4.79086 14.2091 3 12 3C9.79086 3 8 4.79086 8 7C8 9.20914 9.79086 11 12 11Z" stroke="#181818" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                                            </svg>
                                                            Account Details
                                                        </a>
                                                    </span>
                                                </li>
                                                <li>
                                                    <a href="@Url.Action("Logout", "Account")" class="my-account-nav-item">
                                                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                            <path d="M9 21H5C4.46957 21 3.96086 20.7893 3.58579 20.4142C3.21071 20.0391 3 19.5304 3 19V5C3 4.46957 3.21071 3.96086 3.58579 3.58579C3.96086 3.21071 4.46957 3 5 3H9" stroke="#181818" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                                            <path d="M16 17L21 12L16 7" stroke="#181818" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                                            <path d="M21 12H9" stroke="#181818" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                                        </svg>
                                                        Logout
                                                    </a>
                                                </li>
                                            </ul>
                    }
                </div>
            </div>

            <div class="my-account-content">
                <div class="account-details">
                    <form id="registerForm" onsubmit="return validateForm();" asp-action="MyAccount" method="post" class="form-account-details form-has-password">
                        <div class="account-info">
                            <h5 class="title">Information</h5>
                            <fieldset class="mt-3">
                                <input class="" id="firstName" asp-for="FirstName" placeholder="Firstname*" name="firstName" tabindex="2" value="@Model?.FirstName" aria-required="true" required="">
                                <span id="firstNameError" class="text-danger"></span>
                            </fieldset>
                            <fieldset class="mt-3">
                                <input class="" id="lastName" asp-for="LastName" placeholder="Lastname*" name="lastName" tabindex="2" value="@Model?.LastName" aria-required="true" required="">
                                <span id="lastNameError" class="text-danger"></span>
                            </fieldset>
                            <fieldset class="mt-3">
                                <input class="" id="mobile" asp-for="Mobile" type="tel" placeholder="Mobile number*" name="mobile" maxlength="10" pattern="\d{10}" inputmode="numeric" tabindex="2" value="@Model?.Mobile" aria-required="true" required="">
                                <span id="mobileError" class="text-danger"></span>
                            </fieldset>
                            <fieldset class="mt-3">
                                <input class="" type="date" id="birthdate" asp-for="Birthdate" placeholder="Birthdate*" name="birthdate" tabindex="2" value="@Model?.Birthdate?.ToString("yyyy-MM-dd")" aria-required="true" required="">
                                <span id="birthdateError" class="text-danger"></span>
                            </fieldset>
                            <fieldset class="mt-3">
                                <input class="" type="email" id="email" asp-for="Email" placeholder="Email*" name="email" tabindex="2" value="@Model?.Email" aria-required="true" required="">
                                <span id="emailError" class="text-danger"></span>
                            </fieldset>
                            <h5 class="title mt-3">Change Password</h5>
                            <!-- Old Password -->
                            <fieldset class="position-relative password-item mt-3">
                                <input class="input-password" type="password" placeholder="Old Password*" name="oldPassword" id="oldPassword" tabindex="2" required>
                                <span class="toggle-password unshow"><i class="icon-eye-hide-line"></i></span>
                                <span id="oldPasswordError" class="text-danger"></span>
                            </fieldset>

                            <!-- New Password -->
                            <fieldset class="position-relative password-item mt-3">
                                <input class="input-password" type="password" placeholder="New Password*" name="password" id="newPassword" tabindex="2" required>
                                <span class="toggle-password unshow" style="margin-top: -9px;">
                                    <i class="icon-eye-hide-line"></i>
                                </span>
                                <span id="passwordError" class="text-danger"></span>
                            </fieldset>

                            <!-- Confirm Password -->
                            <fieldset class="position-relative password-item mt-3">
                                <input class="input-password" type="password" placeholder="Confirm Password*" name="cnfPassword" id="cnfPassword" tabindex="2" required>
                                <span class="toggle-password unshow"><i class="icon-eye-hide-line"></i></span>
                                <span id="cnfPasswordError" class="text-danger"></span>
                            </fieldset>

                            <div class="button-submit mt-3">
                                <button class="tf-btn btn-fill" type="submit">
                                    <span class="text text-button">Update Account</span>
                                </button>
                            </div>
                        </div>
                        <br />
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
  // document.addEventListener('DOMContentLoaded', function () {
    @if (TempData["Message"] != null)
    {
        <text>
                showMessageModal("success", "@TempData["Message"]");
        </text>
    }
  // });
</script>
<script>
    window.addEventListener("DOMContentLoaded", function () {
        const fields = ["firstName", "lastName", "mobile", "birthdate","email", "oldPassword", "newPassword", "cnfPassword"];
        fields.forEach(id => {
            const input = document.getElementById(id);
            if (input) {
                input.addEventListener("input", validateInput);
                input.addEventListener("blur", validateInput); // optional, for checking on field exit
            }
        });
    });

    function validateInput(event) {
        const field = event.target.id;
        const value = event.target.value.trim();

        let isValid = true;

        const passwordErrorElement = document.getElementById("passwordError");
        const cnfPasswordErrorElement = document.getElementById("cnfPasswordError");
        const strongPasswordRegex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)(?=.*[\W_]).{8,}$/;

        // Clear specific field error
        if (document.getElementById(field + "Error")) {
            document.getElementById(field + "Error").textContent = "";
        }

        // Validate individual fields
        if (field === "firstName" && value === "") {
            document.getElementById("firstNameError").textContent = "First name is required.";
            isValid = false;
        }

        if (field === "lastName" && value === "") {
            document.getElementById("lastNameError").textContent = "Last name is required.";
            isValid = false;
        }

        if (field === "mobile") {
            let cleanValue = value.replace(/\D/g, '').slice(0, 10); 
            event.target.value = cleanValue; 
            if (!/^\d{10}$/.test(cleanValue)) {
                document.getElementById("mobileError").textContent = "Enter a valid 10-digit mobile number.";
                isValid = false;
            }
        }

        if (field === "birthdate" && value === "") {
            document.getElementById("birthdateError").textContent = "Birthdate is required.";
            isValid = false;
        }

         if (field === "email" && value === "") {
            document.getElementById("emailError").textContent = "Email is required.";
            isValid = false;
        }

        // OLD password check
        if (field === "oldPassword") {
            const newPassword = document.getElementById("newPassword").value.trim();
            const cnfPassword = document.getElementById("cnfPassword").value.trim();

            if (value === "" && (newPassword !== "" || cnfPassword !== "")) {
                document.getElementById("oldPasswordError").textContent = "Old password is required to change password.";
                isValid = false;
            }
        }

        // NEW password check
        if (field === "newPassword") {
            const oldPassword = document.getElementById("oldPassword").value.trim();

            if (!strongPasswordRegex.test(value)) {
                passwordErrorElement.textContent = "Password must be at least 8 characters, with one uppercase letter, one number, and a special character.";
                isValid = false;
            } else if (value === oldPassword && oldPassword !== "") {
                passwordErrorElement.textContent = "New password must be different from old password.";
                isValid = false;
            } else {
                passwordErrorElement.textContent = "";
            }
        }

        // CONFIRM password match check
        if (field === "cnfPassword") {
            const newPassword = document.getElementById("newPassword").value.trim();
            if (value !== newPassword) {
                cnfPasswordErrorElement.textContent = "Password and Confirm Password do not match.";
                isValid = false;
            } else {
                cnfPasswordErrorElement.textContent = "";
            }
        }

        return isValid;
    }

    function showMessageModal(type, message) {
        let modalTitle = document.getElementById("messageModalLabel");
        let modalBody = document.getElementById("messageText");
        let modalHeader = document.querySelector("#messageModal .modal-header");

        // Reset modal styles
        modalHeader.classList.remove("bg-success", "bg-danger", "text-white");

        if (type === "success") {
            modalTitle.innerText = "Success";
            modalBody.innerHTML = message;
            modalHeader.classList.add("bg-success", "text-white");
        } else if (type === "error") {
            modalTitle.innerText = "Error";
            modalBody.innerHTML = message;
            modalHeader.classList.add("bg-danger", "text-white");
        }

        // Show modal
        let messageModal = new bootstrap.Modal(document.getElementById("messageModal"));
        messageModal.show();
    }
</script>